<div id="frames" style="display: none">{{frameData}}</div>
<canvas id="bodyCanvas" style="padding-left: 0;
                                padding-right: 0;
                                margin-left: auto;
                                margin-right: auto;
                                margin-top: 30px;
                                background: grey;
                                display: block;
                                height: 600px;
                                width: 800px;"></canvas>
<script>
    var canvasSKLT = document.getElementById('bodyCanvas');
    var ctx1 = canvasSKLT.getContext('2d');
    var radius=9;
    var width = canvasSKLT.width;
    var height = canvasSKLT.height;


    function animateCanvas1(bufferBodyFrames,tracingID){
        var i = 0;
        var TimerID = setInterval(function(){
            liveupdateCanvas1(bufferBodyFrames[i], tracingID);
            i++;
            if (i>=bufferBodyFrames.length){i=0;}
        },20);
        return TimerID;
    }

    function liveupdateCanvas1(bodyFrame, tracingID){
        ctx1.clearRect(0, 0, width, height);
        //drawCircle(ctx1, 50, 50, 10, "red"); removed if following code line works
        //drawCenterCircle(width/2, height/5, 50, body.joints[2].depthX * width, body.joints[2].depthY * height);
        if (tracingID == -1){
            bodyFrame.bodies.some(function(body){
                if(body.tracked){ drawBody(body); return(body.tracked);}
            });
        }
        else {
            drawBody(bodyFrame.bodies[tracingID]);
        }
    }

    function drawBody(body){
        //drawCircle(50, 50, 10, "green");
        jointType = [7,6,5,4,2,8,9,10,11,10,9,8,2,3,2,1,0,12,13,14,15,14,13,12,0,16,17,18,19] //re visit and draw in a line
        jointType.forEach(function(jointType){
            drawJoints(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);
        });
        drawCenterCircle(width/2, height/5, 50, body.joints[2].depthX * width, body.joints[2].depthY * height);

        ctx1.beginPath();
        ctx1.moveTo(body.joints[7].depthX * width, body.joints[7].depthY * height);
        jointType.forEach(function(jointType){
            ctx1.lineTo(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);
            ctx1.moveTo(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);
        });
        ctx1.lineWidth=10;
        ctx1.strokeStyle='blue';
        ctx1.stroke();
        ctx1.closePath();
    }

    function drawJoints(cx,cy){
        ctx1.beginPath();
        ctx1.arc(cx,cy,radius,0,Math.PI*2); //radius is a global variable defined at the beginning
        ctx1.closePath();
        ctx1.fillStyle = "yellow";
        ctx1.fill();
    }

    // Draw Center Circle in ctx1 (canvasSKLT)
    function drawCenterCircle(x, y, r, nx, ny){
        ctx1.beginPath();
        if(nx > x-r && nx < x+r && ny > y-r && ny < y+r)
            ctx1.strokeStyle="green";
        else
            ctx1.strokeStyle="red";

        ctx1.arc(x, y,r,0,Math.PI*2);
        ctx1.stroke();
        ctx1.closePath();
        ctx1.strokeStyle="black";
    }


    var frameData =  JSON.parse(document.getElementById("frames").innerHTML);

    IntervalID = animateCanvas1(frameData["bodyFrames"],frameData["bodyFrames"]["tracingId"]);

</script>
